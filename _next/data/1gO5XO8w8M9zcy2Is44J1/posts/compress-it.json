{"pageProps":{"post":{"title":"فشارش بده!","description":"فشرده کردن فیلم‌ها و تصاویر برای وب","date":"2021-02-12","slug":"compress-it","tags":["linux","introduce"],"content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    img: \"img\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    strong: \"strong\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"چند بار دوستان درمورد حجم ویدیوهایی که توی \", _jsx(_components.a, {\n        href: \"https://t.me/roxaleh\",\n        children: \"کانال تلگرامم\"\n      }), \" گذاشتم پرسیدن ازم که چطوری با اینکه زمانشون بالاست ولی حجمشون اینقدر پایینه! گفتم اینجا توضیح بدم که چطوری ویدیوها و تصاویر رو برای انتشار روی وب آماده کنیم و حجمشون رو به پایین ترین حالت ممکنن با حفظ کیفیت برسونیم.\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"کاهش-حجم-ویدیو\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#کاهش-حجم-ویدیو\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"کاهش حجم ویدیو\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"یکی از معروف ترین و خفن ترین ابزارهای کار کردن با ویدیوها و در کل media، برنامه‌ی خفنی به اسم ffmpeg هست. بعید میدونم کاری بخواید با فایل های چندرسانه‌ای بکنید و ناامیدتون کنه. از چسبودن زیرنویس و دوبله به فیلم گرفته تا جدا کردن فایل صوتی از ویدیو و تغییر فریم و خلاصه هر کاری که بخواین رو انجام میده، من اما اینجا تنها درمورد کم کردن حجم ویدیو با ffmpeg بهتون میگم\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"ffmpeg -i \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"inputFile.mkv\\\"\"\n        }), \" -vcodec h264 -acodec aac \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"outputFile.mp4\\\"\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"به جای inputFile.mkv فایل ورودی‌تون رو بذارید، میتونه با هر فرمت ویدیویی باشه\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"به جای outputFile.mp4 هم اسم فایل خروجیتون\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"خوب اینجا چه اتفاقی داره می‌افته؟\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"توی قدم اول ما AVC ویدیو رو به \", _jsx(_components.a, {\n        href: \"https://fa.wikipedia.org/wiki/H.264/MPEG-4_AVC\",\n        children: \"h264\"\n      }), \" تغییر میدیم، درموردش بیشتر میتونید توی ویکی‌پدیا بخونید ولی به صورت خلاصه یکی از رایج ترین کدک‌های ویدیو داخل وب هست\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"قدم دوم هم داره acodec یا کدک صوتی رو مشخص میکنه که بازم روی یکی از فشرده ترین حالت ها هستش\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/compress-it/01.jpg\",\n        alt: \"result\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"خوب برای من یه فایل ۲۶ مگ رو به ۹ مگ رسونده، روی فایل‌های حجیم ممکنه یک فایل ۱ گیگ رو برسونه به ۱۰۰ مگ، خیلی کارش درسته\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"دوستان اشاره میکنند که با h265 حجم خیلی کمتر هم میتونه بشه ولی پخش کردنش منابع بیشتری نیاز داره، شاید برای همین هنوز توی youtube و... از h264 استفاده میکنن. اگر خواستید امتحان کنید اینطوری پیش برید\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"ffmpeg -i \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"inputFile.mp4\\\"\"\n        }), \" -vcodec libx265 -acodec aac \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"outputFile.mp4\\\"\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"برای من حجم ویدیو رو از ۲۶ به ۸.۳ مگ رسوند\\nاینم رو هم دوستان اضافه کردند که به تعداد فریم‌های تکراری ویدیو ربط داره میزان فشرده شدن، ممکنه خیلی تاثیر نداشته باشه بعضی وقت‌ها\"\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"کاهش-حجم-تصاویر\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#کاهش-حجم-تصاویر\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"کاهش حجم تصاویر\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"تصاویر هم برای انتشار روی اینترنت خوبه که فشرده بشن، با گوشی های امروزی یه عکس ممکنه تا ۳۰ مگ هم حجمش باشه! اگر ۳-۴ تا عکس با این کیفیت رو بخوام بذارم توی وبلاگم چند صد مگ برای خوندن همین نوشته‌ی ساده باید کنار بذارید، در نتیجه بریم تصاویر رو هم فشرده کنیم!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"دوتا ابزار خیلی معروف برای این کار هست، یکی برای png و یکی برای jpg\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"jpegoptim\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#jpegoptim\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"jpegoptim:\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"نصب\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"sudo apt install jpegoptim\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"استفاده\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"## یه فایل خاص\"\n        }), \"\\njpegoptim sample.jpg\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"## تمام تصاویر داخل یک پوشه\"\n        }), \"\\njpegoptim *.jpg\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"## تمام تصاویر داخل این پوشه و پوشه‌های زیر مجموعه\"\n        }), \"\\nfind . -\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"type\"\n        }), \" f \\\\( -iname \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"*.jpg\\\"\"\n        }), \" -o -iname \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"*.jpeg\\\"\"\n        }), \" \\\\) -\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"exec\"\n        }), \" jpegoptim -f --strip-all {} \\\\;\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"optipng\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#optipng\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"optipng:\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"نصب\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"sudo apt install optipng\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"استفاده\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"## تنظیمات پیش فرض\"\n        }), \"\\noptipng file.png\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"## حداکثر فشرده سازی سریع تمام فایل‌های png\"\n        }), \"\\noptipng -o2 -strip all *.png\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"## حداکثر فشرده سازی نه چندان سریع (برای فایل‌های حجیم)\"\n        }), \"\\noptipng -o7 -strip all *.png\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"## فشرده سازی تمام فایل‌های داخل این پوشه و پوشه‌های زیر مجموعه\"\n        }), \"\\nfind . -\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"type\"\n        }), \" f -iname \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"*.png\\\"\"\n        }), \" -\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"exec\"\n        }), \" optipng -nb -nc {} \\\\;\\n\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"امیدوارم که به کارتون بیاد، اگر شما هم روشی میشناسید یا تجربه‌ای برای فشرده کردن فایل‌ها دارید باهام به اشتراک بذارید\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"coverImage":"/posts/compress-it.jpg","timeToRead":11}},"__N_SSG":true}